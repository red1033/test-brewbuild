#!/usr/bin/perl
use warnings;
use strict;

use Getopt::Long;


my $ip = '0.0.0.0';
my $port = 7800;
my $help;

if (@ARGV && $ARGV[0] !~ /(?:start|stop)/ || ! @ARGV){
    $help = 1;
}
my $op = shift @ARGV;

GetOptions(
    "ip=s"   => \$ip,
    "port=i" => \$port,
    "help"   => \$help,
);

if ($help){
    print <<'EOF';
Usage: 

bbtester start [--ip 0.0.0.0] [--port 7800]]
bbtester stop

EOF
exit;
}

my $is_win = $^O =~ /MSWin/ ? 1 : 0;

use if $is_win, 'Win32::Daemon';
use if ! $is_win, 'Proc::Daemon';

if (! $is_win){

    my $pid_file = "$ENV{HOME}/brewbuild.pid";
    
    if ($op eq 'stop'){
        open my $fh, '<', $pid_file or die $!;
        my $pid = <$fh>;
        print "\nStopping the Test::BrewBuild test server at PID $pid...\n\n";
        kill 'KILL', ($pid);
        unlink $pid_file;
        exit;
    }

    if ($op eq 'start'){
        if (-f $pid_file){
            my $fh;
            open $fh, '<', $pid_file or die $!;
            my $existing_pid = <$fh>;
            close $fh;

            if ($existing_pid){
                if (kill(0, $existing_pid)){
                    die "brewbuild listener is already running...\n";
                }
            }
        }

        my $tester = Proc::Daemon->new(
            work_dir => "$ENV{HOME}/scratch",
            exec_command => "brewbuild -L --tester_ip $ip --tester-port $port",
        );

        my $pid = $tester->Init;
        print "\nStarted the Test::BrewBuild test server at PID $pid...\n\n";
        open my $wfh, '>', $pid_file or die $!;
        print $wfh $pid;
        close $wfh;
   
        # error check for brewbuild

        if (-f $pid_file){
            sleep 1;
            my $fh;
            open $fh, '<', $pid_file or die $!;
            my $existing_pid = <$fh>;
            close $fh;
           
            if ($existing_pid){
                if (! kill(0, $existing_pid)){
                    die "error! run brewbuild -L at the command line and check for failure\n\n";
                }
            }
        }
    }
}
